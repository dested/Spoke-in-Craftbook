class WW
	
	board=[[]]
	def () 
		this.board.clear()
		between(1,this.Width)=>|(x)
			jm=[]
			between(1,this.Height)=>|(y)
				jm.add(0)
			this.board.add(jm)		
	
	world=create World()
	Width=10
	Height=6
	
	nodeSize=8
	def createWorld(startX,startY,startZ) 
		jw=between(1,this.Width)
		jh=between(1,this.Height)
		jw=>|(x)
			jh=>|(y)
				createNode(startX+(x*nodeSize),startY,startZ+(y*nodeSize))
				drawPieceNode(x,y,startX+(x*nodeSize),startY,startZ+(y*nodeSize))
		
	def drawPieceNode(x,y,startX,startY,startZ)
		makeItSpecial(startX,startY-1,startZ, startX+nodeSize,startY,startZ+nodeSize,|(xI,x1,x2,yI,y1,y2,zI,z1,z2)=>
			if (yI==y1)
				setBlock(Material.Obsidian,xI,yI,zI)
			else
				if ((((xI==x2) || xI==x1) || zI==z2) || zI==z1)
					setBlock(Material.Obsidian,xI,yI,zI)
				else
					setBlock(Material.Glass,xI,yI,zI)
		)
		print("done")
		

	def createNode(startX,startY,startZ)
		makeItSpecial(startX,startY-1,startZ,startX+nodeSize,startY,startZ+nodeSize,|(xI,x1,x2,yI,y1,y2,zI ,z1,z2)=>
			if (yI==y1)
				setBlock(Material.Obsidian,xI,yI,zI)
			else
				if ((((xI==x2) || xI==x1) || zI==z2) || zI==z1)
					setBlock(Material.Obsidian,xI,yI,zI)
				else
					setBlock(Material.Glass,xI,yI,zI)
		)
		print("done")

	def makeIt(x1,y1,z1,x2,y2,z2,doit)
		a1=between(x1,x2)
		a2=between(y1,y2)
		a3=between(z1,z2)
		
		a1=>|(x)
			a2=>|(y)
				a3=>|(z)
					doit(x,y,z)

	def makeItSpecial(x1,y1,z1,x2,y2,z2,doit)
		a1=between(x1,x2)
		a2=between(y1,y2)
		a3=between(z1,z2)
		
		a1=>|(xC)
			a2=>|(yC)
				a3=>|(zC)
					doit(xC,x1,x2,yC,y1,y2,zC,z1,z2)
					      

	def static createGame(int X,int Y,int Z,bool tick)
		if tick 
			print(tick+"  create")
			global.wireWorld.createWorld(X,Y,Z)

	def setBlock(blockType,x,y,z)
		world.getBlockAt(x,y,z).setType(blockType)

	def setMakeSign(x,y,z,isBlack,posX,posY)
		
		world.getBlockAt(x,y,z).makeSign(["AAA|SPOKE","[MC5002]","Chess-playPiece",posX+"-"+posY+"-"+isBlack])

	def setStoneButton(ind,x,y,z)
		world.getBlockAt(x,y,z).makeStoneButton(ind)


	def setBlockAndData(blockType,data,x,y,z)
		world.getBlockAt(x,y,z).setTypeAndData(blockType,data)



	def fillArea(type,startX,startY,startZ,endX,endY,endZ)
		between(startX,endX)=>|(x)
			between(startY,endY)=>|(y)
				between(startZ,endZ)=>|(z)
					blk=world.getBlockAt(x,y,z)
					blk.setType(type)

	def fillAreaIf(type,typeIf,startX,startY,startZ,endX,endY,endZ)
		between(startX,endX)=>|(x)
			between(startY,endY)=>|(y)
				between(startZ,endZ)=>|(z)
					blk=world.getBlockAt(x,y,z)
					if typeIf==blk.getType()
						blk.setType(type)
	
	
	def fillAreaQuery(query,startX,startY,startZ,endX,endY,endZ)
		between(startX,endX)=>|(x)
			between(startY,endY)=>|(y)
				between(startZ,endZ)=>|(z)
					blk=world.getBlockAt(x,y,z)
					gm=query(x,y,z,blk)
					if(gm!=blk)
						blk.setType(gm)


	def between(in1,in2)
		arn=[]
		if(in1>=in2)
			(in1>=in2)=>
				arn.add(in1 )
				in1=in1-1
		else
			(in1<=in2)=>
				arn.add(in1)
				in1=in1+1
		return arn

	def betweenSkip(in1,in2,skip)
		arn=[]
		if(in1>=in2)
			(in1>=in2)=>
				arn.add(in1)
				in1=in1-skip
		else
			(in1<=in2)=>
				arn.add(in1)
				in1=in1+skip
		return arn

class Location
	PosX=0
	PosY=0
	PosZ=0
	def (xx,yy,zz)
		PosX=xx
		PosY=yy
		PosZ=zz
	

global
	wireWorld=create WW() 

enum Direction 
	North=0
	West=1
	South=2
	East=3


enum Material
	Glowstone=89
	Obsidian=49
	Wool=35
	Redstone=55
	Sign=68
	Snow=78
	StoneButton=77
	Glass=20